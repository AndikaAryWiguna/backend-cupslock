{
    "openapi": "3.0.0",
    "info": {
        "title": "Cupslock API Documentation",
        "description": "Dokumentasi API untuk sistem Cupslock, meliputi autentikasi dan fitur utama aplikasi.",
        "contact": {
            "name": "Cupslock Dev Team",
            "email": "developer@cupslock.test"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local Development Server"
        }
    ],
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register user baru",
                "description": "Mendaftarkan user baru dengan data name, username, email, dan password.",
                "operationId": "33da49124bf72d9a48fdde8ff88f7578",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "username",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Andika Wiguna"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "andika"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "andika@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Register success"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "description": "Login menggunakan email dan password untuk mendapatkan token.",
                "operationId": "68c5cab6a386991c65ac59f24f9695a2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "andika@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login success"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Menghapus token aktif untuk user yang sedang login.",
                "operationId": "a03f1137c4c903d1965e492c020f7ff6",
                "responses": {
                    "200": {
                        "description": "Logout success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Lihat user login",
                "description": "Mengambil data user yang sedang login menggunakan token Sanctum.",
                "operationId": "833e72f98ff5afd7cc6f8952f80cd809",
                "responses": {
                    "200": {
                        "description": "Berhasil menampilkan data user"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}